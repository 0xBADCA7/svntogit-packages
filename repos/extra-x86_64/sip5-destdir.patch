--- sip-5.0.0/sipbuild/distinfo/distinfo.py.orig	2019-12-13 18:28:50.195055008 +0000
+++ sip-5.0.0/sipbuild/distinfo/distinfo.py	2019-12-13 18:30:22.169531691 +0000
@@ -72,20 +72,20 @@
 
     # Make sure we have an empty dist-info directory.  Handle exceptions as the
     # user may be trying something silly with a system directory.
-    if os.path.exists(distinfo_dir):
+    if os.path.exists(real_distinfo_dir):
         try:
-            shutil.rmtree(distinfo_dir)
+            shutil.rmtree(real_distinfo_dir)
         except Exception as e:
             raise UserException(
                     "unable remove old dist-info directory '{}'".format(
-                            distinfo_dir),
+                            real_distinfo_dir),
                     str(e))
 
     try:
-        os.mkdir(distinfo_dir)
+        os.mkdir(real_distinfo_dir)
     except Exception as e:
         raise UserException(
-                "unable create dist-info directory '{}'".format(distinfo_dir),
+                "unable create dist-info directory '{}'".format(real_distinfo_dir),
                 str(e))
 
     # Reproducable builds.
@@ -93,7 +93,7 @@
 
     if wheel_tag is None:
         # Create the INSTALLER file.
-        installer_fn = os.path.join(distinfo_dir, 'INSTALLER')
+        installer_fn = os.path.join(real_distinfo_dir, 'INSTALLER')
         installed.append(installer_fn)
 
         with open(prefix_dir + installer_fn, 'w') as installer_f:
@@ -101,7 +101,7 @@
     else:
         # Define any entry points.
         if console_scripts:
-            eps_fn = os.path.join(distinfo_dir, 'entry_points.txt')
+            eps_fn = os.path.join(real_distinfo_dir, 'entry_points.txt')
             installed.append(eps_fn)
 
             with open(prefix_dir + eps_fn, 'w') as eps_f:
@@ -116,7 +116,7 @@
 Tag: {}
 '''
 
-        wheel_fn = os.path.join(distinfo_dir, 'WHEEL')
+        wheel_fn = os.path.join(real_distinfo_dir, 'WHEEL')
         installed.append(wheel_fn)
 
         with open(prefix_dir + wheel_fn, 'w') as wheel_f:
@@ -125,13 +125,13 @@
                             wheel_tag))
 
     # Create the METADATA file.
-    metadata_fn = os.path.join(distinfo_dir, 'METADATA')
+    metadata_fn = os.path.join(real_distinfo_dir, 'METADATA')
     write_metadata(metadata, requires_dists, metadata_fn, project_root,
             prefix_dir=prefix_dir)
     installed.append(metadata_fn)
 
     # Create the RECORD file.
-    record_fn = os.path.join(distinfo_dir, 'RECORD')
+    record_fn = os.path.join(real_distinfo_dir, 'RECORD')
 
     distinfo_path, distinfo_base = os.path.split(distinfo_dir)
 
